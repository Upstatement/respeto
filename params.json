{"name":"Respeto","tagline":"Respeto is a deferred image loader made to support responsive image workflows","body":"# Introducing Respeto\r\n\r\nRespeto is a deferred image loader with responsive design workflows in mind. It was borne of fire and steel (and some semicolons).\r\n\r\nHere's an [illustrative video](http://upstatement.com/wp-content/themes/blades/images/portfolio/npr/npr-resp-image.mp4) that demonstrates the effect Respeto has. You generate images, Respeto loads them based on media queries. Easy peasey.\r\n\r\nThis repository contains tests, a responsive workflow demo, and a bunch of other junk. If you only want the Respeto lib, then download [respeto.min.js](https://raw.github.com/Upstatement/respeto/master/dist/respeto.min.js) or simply `bower install respeto`.\r\n\r\nRespeto is currently in _alpha_, which means it's feature-complete, and ready for real-world testing. I'd like to move this toward a v1.0 by February 2014, so grab it and give it a spin!\r\n\r\n## TODO\r\n\r\n* finish explaining what this is\r\n* explain bandwidth vs. JS support implications\r\n* nod to the ongoing responsive image standards conversation\r\n* finish responsive workflow explanation\r\n* this all seems like it goes in a web site, not a README, no?\r\n* maybe remove jQuery as a dependency?\r\n\r\n## Usage\r\n\r\nThis can be used by itself, or with a responsive state manager. I've created a very simple state manager implementation in the `/demo/js/demo.js` file.\r\n\r\n**1** - Download the latest version of Respeto [here](https://raw.github.com/Upstatement/respeto/master/dist/respeto.min.js) or `bower install respeto`\r\n\r\n> Respeto depends on [jQuery](https://jquery.org/)\r\n\r\n**2** - Add respeto.js to your HTML document (I recommend putting this at the bottom, before your closing `</body>` tag)\r\n\r\n```html\r\n\t...\r\n\t<script src=\"path_to_js/respeto.js\"></script>\r\n</body>\r\n```\r\n\r\n**3** - Add Respeto data attributes where you want to manage image loading\r\n\r\n```html\r\n<img src=\"lincoln_fallback.jpg\" data-rsp-img=\"portrait_lincoln.jpg\">\r\n<img data-rsp-img=\"portrait_washington.jpg\">\r\n<img data-rsp-img=\"portrait_obama.jpg\" data-rsp-path=\"custom/path/\">\r\n<div data-rsp-img=\"portrait_obama.jpg\"></div>\r\n```\r\n\r\n**4** - Create a Respeto object and run the `load()` method\r\n\r\n```javascript\r\n$(function() { // jQuery.on('ready')\r\n\r\n\tvar rsp = new Respeto();\r\n\trsp.load('tablet');\r\n\r\n});\r\n```\r\n\r\n**5** - ...and your `img` elements get their `src` attributes set, and new images will load\r\n\r\n```html\r\n<img src=\"portrait_lincoln_tablet.jpg\" data-rsp-img=\"portrait_lincoln.jpg\">\r\n<img src=\"portrait_washington_tablet.jpg\" data-rsp-img=\"portrait_washington.jpg\">\r\n<img src=\"custom/path/portrait_obama_tablet.jpg\" data-rsp-img=\"portrait_obama.jpg\" data-rsp-path=\"custom/path/\">\r\n<div style=\"background-image: url(http://your_site.com/portrait_obama_tablet.jpg)\" data-rsp-img=\"portrait_obama.jpg\"></div>\r\n```\r\n\r\n**6** - [optional] Simple state-based usage\r\n\r\n```javascript\r\n\r\n// this should be inside of a jQuery $.ready() function\r\n\r\nvar rsp = new Respeto();\r\n\r\nvar width = $(window).width();\r\n\r\nif(width <= 480) {\r\n  rsp.load('small'); // loads images with _small suffix\r\n}\r\n\r\nif(width > 480 && width <= 1024) {\r\n  rsp.load('large'); // sets image sources with _large suffix\r\n}\r\n\r\nif(width > 1024) {\r\n  rsp.load('huge'); // loads images with _huge suffix\r\n}\r\n```\r\n\r\n> Respeto recommends a responsive image workflow with [Grunt](http://gruntjs.com/) and [Grunt Responsive Images](https://github.com/andismith/grunt-responsive-images)\r\n\r\n## A Responsive Image Workflow\r\n\r\nUsing Respeto really means that you're using a responsive image workflow (possibly for the first time). What I've created in the `/demo` directory constitutes a very simple example of a working responsive workflow. \r\n\r\nHere are the pieces:\r\n\r\n1. a source images directory\r\n2. image workflow tools (in this case Grunt and ImageMagick)\r\n3. a destination directory\r\n4. Respeto, of course\r\n\r\n### 1 - Source image management\r\n\r\n* certain formats don't process well (animated gifs, svg)\r\n* have a source images dir for processing, and a source images dir for copying\r\n* my example only has a processing dir for brevity\r\n\r\n### 2 - Image Workflow Tools\r\n\r\n* Grunt\r\n* Grunt Responsive Images (https://github.com/andismith/grunt-responsive-images)\r\n* ImageMagick\r\n * `brew install ImageMagick` if you're on OSX\r\n\r\n### 3 - Destination image management\r\n\r\n* no source control here\r\n * .gitignore away\r\n* compress wisely\r\n * you can get away with more compression in retina (http://dh.karelia.com/retina/)\r\n\r\n### 4 - Respeto implementation\r\n\r\n* This is the easy part, eh? Depending on your needs, the rest of this README and examples should take care of this part...\r\n\r\n## API\r\n\r\n### new Respeto(_options_)\r\n\r\n* options - _object , optional_ . Respeto parameters, see below\r\n\r\n#### Usage\r\n\r\n```javascript\r\nvar rsp = new Respeto();\r\n```\r\n\r\nReturns the object with the following methods:\r\n\r\n* rsp.load(label, _options_) - processes targets that contain Respeto data attributes and assigns `src` or `style` properties as necessary. `options` is an optional object where you may specify a context, a selector to match, and/or a selector to exclude:\r\n * *context*: a jQuery selector that limits the scope of what you're loading. Useful if you're working in a single-page app, and you only want to load images inside a specific container.\r\n * *match*: a jQuery selector that limits the scope of what you're loading to elements that match this option.\r\n * *exclude*: a single jQuery selector (not comma-delimited)\r\n\r\n### options\r\n\r\n<table border=\"0\" cellspacing=\"0\">\r\n    <thead>\r\n    \t<td align=\"center\"><strong>Parameter</strong></td>\r\n    \t<td align=\"center\"><strong>Type</strong></td>\r\n    \t<td align=\"center\"><strong>Default Value</strong></td>\r\n    \t<td align=\"center\"><strong>Example</strong></td>\r\n    \t<td align=\"center\"><strong>Description</strong></td>\r\n  \t</thead>\r\n  \t<tr>\r\n  \t\t<td><strong>imageDataAttribute</strong></td>\r\n  \t\t<td>string</td>\r\n  \t\t<td>'rsp-img'</td>\r\n  \t\t<td>'image-source'</td>\r\n  \t\t<td>This translates into a <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes\">data attribute</a> that contains a source image. Using the default, it will look like this: <code>&lt;img data-rsp-img=&ldquo;your_image_here.jpg&rdquo;&gt;</code></td>\r\n  \t</tr>\r\n  \t<tr>\r\n  \t\t<td><strong>imagePathAttribute</strong></td>\r\n  \t\t<td>string</td>\r\n  \t\t<td>'rsp-path'</td>\r\n  \t\t<td>'custom-path'</td>\r\n  \t\t<td>This is the data attribute with will contain paths for each image that wishes to override the global <code>imagePath</code>.</td>\r\n  \t</tr>\r\n  \t<tr>\r\n  \t\t<td><strong>imagePath</strong></td>\r\n  \t\t<td>string</td>\r\n  \t\t<td>''</td>\r\n  \t\t<td>'images/'</td>\r\n  \t\t<td>This path will be prefixed onto every source image. If a <code>data-rsp-path</code> is present, imagePath will be ignored.</td>\r\n  \t</tr>\r\n  \t<tr>\r\n  \t\t<td><strong>disableRetina</strong></td>\r\n  \t\t<td>boolean</td>\r\n  \t\t<td>true</td>\r\n  \t\t<td>false</td>\r\n  \t\t<td>If you wish to enable retina suffixes (for instance, if you are generating retina alternatives), set this to <code>false</code>.</td>\r\n  \t</tr>\r\n  \t<tr>\r\n  \t\t<td><strong>retinaSuffix</strong></td>\r\n  \t\t<td>string</td>\r\n  \t\t<td>'_x2'</td>\r\n  \t\t<td>'@2'</td>\r\n  \t\t<td><code>retinaSuffix</code> determines the suffix that will be attached when <code>disableRetina</code> is false, and users are accessing your site on a retina-friendly device.</td>\r\n  \t</tr>\r\n</table>\r\n\r\n### Minimizing Requests/Bandwidth vs. JavaScript support\r\n\r\nTBD\r\n\r\n### Advanced\r\n\r\n#### Loading images based on class matching\r\n\r\n```javascript\r\nvar rsp = new Respeto();\r\nrsp.load('small', {\r\n\tmatch: '.load-me'\r\n});\r\n```\r\n\r\n##### Before running `rsp.load()`:\r\n```html\r\n<img class=\"load-me\" data-rsp-img=\"dog.jpg\">\r\n<img class=\"load-me\" data-rsp-img=\"fish.jpg\">\r\n<img data-rsp-img=\"cat.jpg\">\r\n<img data-rsp-img=\"monkey.jpg\">\r\n<img class=\"load-me\" data-rsp-img=\"elephant.jpg\">\r\n<img data-rsp-img=\"giraffe.jpg\">\r\n```\r\n\r\n##### After running `rsp.load()`:\r\n```html\r\n<img src=\"dog_small.jpg\" class=\"load-me\" data-rsp-img=\"dog.jpg\"> <!-- match! -->\r\n<img src=\"fish_small.jpg\" class=\"load-me\" data-rsp-img=\"fish.jpg\"> <!-- match! -->\r\n<img data-rsp-img=\"cat.jpg\">\r\n<img data-rsp-img=\"monkey.jpg\">\r\n<img src=\"elephant_small.jpg\" class=\"load-me\" data-rsp-img=\"elephant.jpg\"> <!-- match! -->\r\n<img data-rsp-img=\"giraffe.jpg\">\r\n\t\r\n```\r\n\r\n#### Contextual image-loading\r\n\r\n```javascript\r\n\r\nvar rsp = new Respeto();\r\n\r\n// load our \"large\" images inside of elements with id of 'page-1'\r\nrsp.load('large', {\r\n\tcontext: '#page-1'\r\n});\r\n```\r\n\r\n##### Before running `load()`:\r\n```html\r\n<section id=\"#page-1\">\r\n\t<img data-rsp-img=\"dog.jpg\">\r\n\t<img data-rsp-img=\"fish.jpg\">\r\n</section>\r\n\r\n<section id=\"#page-2\">\r\n\t<img data-rsp-img=\"cat.jpg\">\r\n\t<img data-rsp-img=\"monkey.jpg\">\r\n</section>\r\n\r\n<section id=\"#page-3\">\r\n\t<img data-rsp-img=\"elephant.jpg\">\r\n\t<img data-rsp-img=\"giraffe.jpg\">\r\n</section>\r\n```\r\n\r\n##### After running `load()`:\r\n```html\r\n<section id=\"#page-1\">\r\n\t<img src=\"dog_large.jpg\" data-rsp-img=\"dog.jpg\"> <!-- match! -->\r\n\t<img src=\"fish_large.jpg\" data-rsp-img=\"fish.jpg\"> <!-- match! -->\r\n</section>\r\n\r\n<section id=\"#page-2\">\r\n\t<img data-rsp-img=\"cat.jpg\">\r\n\t<img data-rsp-img=\"monkey.jpg\">\r\n</section>\r\n\r\n<section id=\"#page-3\">\r\n\t<img data-rsp-img=\"elephant.jpg\">\r\n\t<img data-rsp-img=\"giraffe.jpg\">\r\n</section>\r\n\t\r\n```\r\n","google":"UA-294631-15","note":"Don't delete this file! It's used internally to help with page regeneration."}